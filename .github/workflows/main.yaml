name: Main CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]
    paths:
      - 'src/**'
      - '.github/workflows/**'
jobs:
  # test:
  #   name: Test and Semantic Release
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./src
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14'

  #     - name: Install dependencies
  #       run: yarn

  #     - name: Test
  #       run: yarn run test

  release:
    # needs: test
    name: Release and build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0

      # - name: Setup Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '14'

      # - name: Install dependencies
      #   run: yarn

      # - name: Release
      #   id: semantic
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npx semantic-release

      - name: Run increment action
        if: ${{ steps.semantic.outputs.NEXT_VERSION }}
        uses: jb-0/increment-action@v1.0.0
        with:
          file-path: '/src/app.json'

      # - name: Setup git config
      #   if: ${{ steps.semantic.outputs.NEXT_VERSION }}
      #   run: |
      #     git config user.name "GitHub Actions Bot"
      #     git config user.email "<>"
      #     git add /src/app.json
      #     git commit -m "chore: increment app versionCode [skip ci]"
      #     git push origin main
      #     git pull origin master --rebase

      # - name: Setup Expo
      #   if: ${{ steps.semantic.outputs.NEXT_VERSION }}
      #   uses: expo/expo-github-action@v5
      #   with:
      #     expo-version: 4.7
      #     expo-token: ${{ secrets.EXPO_TOKEN }}
      #     expo-cache: true

      # - name: Install dependencies
      #   if: ${{ steps.semantic.outputs.NEXT_VERSION }}
      #   run: yarn

      # - name: Build on EAS
      #   if: ${{ steps.semantic.outputs.NEXT_VERSION }}
      #   run: npx eas-cli build --platform all --non-interactive
